Graphics.prototype.setFontRobotoRegular50NumericOnly = function(scale) {
  // Actual height 39 (40 - 2)
  this.setFontCustom(atob("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAB8AAAAAAAfAAAAAAAPwAAAAAAB8AAAAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAA4AAAAAAB+AAAAAAD/gAAAAAD/4AAAAAH/4AAAAAP/wAAAAAP/gAAAAAf/gAAAAAf/AAAAAA/+AAAAAB/+AAAAAB/8AAAAAD/4AAAAAH/4AAAAAD/wAAAAAA/wAAAAAAPgAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///wAAAB////gAAA////8AAA/////gAAP////8AAH8AAA/gAB8AAAD4AA+AAAAfAAPAAAADwADwAAAA8AA8AAAAPAAPAAAADwADwAAAA8AA8AAAAPAAPgAAAHwAB8AAAD4AAfwAAD+AAD/////AAA/////wAAH////4AAAf///4AAAB///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAAAAPgAAAAAADwAAAAAAB8AAAAAAAfAAAAAAAHgAAAAAAD4AAAAAAA+AAAAAAAPAAAAAAAH/////wAB/////8AA//////AAP/////wAD/////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAfgAADwAAP4AAB8AAH+AAA/AAD/gAAfwAB/AAAf8AAfAAAP/AAPgAAH7wAD4AAD88AA8AAB+PAAPAAA/DwADwAAfg8AA8AAPwPAAPAAH4DwADwAH8A8AA+AD+APAAPwB/ADwAB/D/gA8AAf//gAPAAD//wADwAAf/wAA8AAD/4AAPAAAHwAADwAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAADgAAAHwAA+AAAD8AAP4AAB/AAD/AAA/wAA/wAAf4AAD+AAHwAAAPgAD4APAB8AA+ADwAPAAPAA8ADwADwAPAA8AA8ADwAPAAPAA8ADwADwAfAA8AA8AH4APAAPgD+AHwAB8B/wD4AAf7/+B+AAD//v//AAA//x//wAAD/4P/4AAAf8B/4AAAAYAH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAAAHwAAAAAAH8AAAAAAD/AAAAAAD/wAAAAAD/8AAAAAB/vAAAAAB/jwAAAAA/g8AAAAA/wPAAAAAfwDwAAAAf4A8AAAAf4APAAAAP8ADwAAAP8AA8AAAH8AAPAAAD/////8AA//////AAP/////wAD/////8AA//////AAAAAAPAAAAAAADwAAAAAAA8AAAAAAAPAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAB/APwAAH//wD+AAD//8A/wAA///AH+AAP//wAPgAD/B4AB8AA8A+AAfAAPAPAADwADwDwAA8AA8A8AAPAAPAPAADwADwD4AA8AA8A+AAPAAPAPwAHwADwD8AD4AA8AfwD+AAPAH///AADwA///wAA8AH//4AAPAAf/4AAAAAB/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//AAAAAD//+AAAAD///4AAAD////AAAB////4AAA/78D/AAAfw8AH4AAPweAA+AAD4PgAHwAB8DwAA8AAfA8AAPAAHgPAADwAD4DwAA8AA+A8AAPAAPAPgAHwADwD4AB8AA8AfgA+AAPAH+B/gAAAA///wAAAAH//4AAAAA//8AAAAAH/8AAAAAAP4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAAAA8AAAAAAAPAAAAAAADwAAAAAAA8AAAABAAPAAAABwADwAAAB8AA8AAAB/AAPAAAB/wADwAAD/8AA8AAD/8AAPAAD/4AADwAD/4AAA8AD/4AAAPAH/wAAADwH/wAAAA8H/wAAAAPH/wAAAAD3/gAAAAA//gAAAAAP/gAAAAAD/gAAAAAA/AAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwA/4AAAH/Af/AAAH/8P/4AAD//n//AAA//7//4AAfx/+A+AAHwD+AHwAD4AfgB8AA8AHwAPAAPAA8ADwADwAPAA8AA8ADwAPAAPAA8ADwADwAfAA8AA+AH4AfAAHwD+AHwAB/D/4D4AAP/+/n+AAD//n//AAAf/w//gAAB/wH/wAAAHwA/4AAAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+AAAAAAD/8AAAAAD//wAAAAB//+AAAAA///wAAAAf4H+APAAH4AfgDwAD8AB8A8AA+AAfAPAAPAADwDwADwAA8B8AA8AAPAfAAPAADwHgADwAA8D4AA+AAeB+AAHwAHg/AAB+ADwfgAAP8D4/4AAD////8AAAf///8AAAB///+AAAAP//+AAAAAP/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAOAAAB8AAHwAAAfgAD8AAAH4AA/AAAB8AAHwAAAOAAA4AAAAAAAAAAAAAAAAAAAAAAAAAA"), 46, atob("DRUcHBwcHBwcHBwcDA=="), 50+(scale<<8)+(1<<16));
  return this;
};

Graphics.prototype.setFontRobotoRegular21 = function(scale) {
  // Actual height 22 (21 - 0)
  this.setFontCustom(atob("AAAAAAAAAAAAAAAAAAAAAAAAAB/+YH/5gAAAAAAAAAAA+AAD4AAAAAA+AAD4AAAAAAAAAAAMAAYwABj+AH/4D/wAfjABGM4AZ/gD/4B/sAHYwABiAAEAAAAAAAAOAPw8A/h4HGBh4cHvgweGDhgcHOA8fwBw/AAAAAAAAPgAB/AAGMAAYwMBjDgD48AHHAABwAAOfADjuAcMYAAxgAD+AAHwAAAAAAAAAHgBx/AP3eB/wYGHBgY+GBjeYH4/gPA8AAHwAB/gAHGAAAAAAAA+AAD4AAAAAAAAAAA/gAf/wH//w8AHnAAHwAAEAAAMAAB4AAN4ABz8B+D//gD/4AAAAAAAAMAAAxAADMAAHwAH8AAf4AAPwAAzAADAAAAAAABgAAGAAAYAABgAD/8AP/wABgAAGAAAYAABgAAGAAAADAAB8AAPgAAYAAwAADAAAMAAAwAADAAAMAAAAAAAEAAA4AABgAAAAAAAAAAQAAPAAH4AB8AA/AAPgAH4AAcAAAAAAAAAAD/wA//wH4fgYAOBgAYGABgYAGB4B4D//AH/4AAAAAAAAAAAAYAADAAAMAABwAAH//gf/+AAAAAAAAAAAAAAAAAAAHAGA8A4HAHgYA+BgHYGB5gYPGB7wYD+BgHgGAAAYAAAAHA4A8DwHgDgYMGBgwYGDBgYcGB/44D9/AHj4AAAAAAMAABwAAfAAHsAA8wAPDADwMAf/+B//4H//gAAwAADAAAAAAAAAfjgH+HAf4OBjAYGMBgYwGBjg4GH/AYP4AAOAAAAAAfgAP/gB//AO4OBzAYGMBgYwGBjg4AH/AAP4AAEAAAAAYAABgAAGABgYAeBgHwGD8AY/ABvgAH4AAeAABAAAAAAADB4A/fwH/3gccGBgwYGDBgYcGB744D9/AHj4AAAAAAAAD8AA/4AHjxgYDGBgMYGAzgcDMA87wD/+AD/gAAAAAAAABgGAHA4AYBgAAAAAAAAYB8BwPgGAYAAAAAAAAAYAADwAAPAAB+AAGYAA5wADDAAcOABgYAAAAAAAAAZgABmAAGYAAZgABmAAGYAAZgABmAAGYAAZgAAAAAAAABgYAHDgAMMAA5wABmAAGYAAPAAA8AADwAAGAAAAAAAAAOAAA4AAHAAAYHmBg+YGHgAf4AA/AAAwAAAAAAAfwAH/4B4DwOADhwAGGD8Mw/4zHBjMYGMxgYzGPDMf+Mw8YhgBgHAGAOA4Af/AAPwAAAAAAAgAAeAAP4AD+AB/gA/mAHwYAeBgB/GAA/4AAfwAAfwAAPgAAGAAAAAAAAf/+B//4GDBgYMGBgwYGDBgYcGBz44D//AHz8AAHAAAAAAAAAH+AB/+AP/8A4A4HABgYAGBgAYGABgYAGB4A4DwPAHA4AAAAAAAAAAAB//4H//gYAGBgAYGABgYAGBgAYDADAPA8Af/gAf4AAAAAAAAAAAAf/+B//4GDBgYMGBgwYGDBgYMGBgwYGDBgYAGAAAAAAAAAAAB//4H//gYMABgwAGDAAYMABgwAGDAAYMABgAAAAAAB/AAf/AD//AeAcBgA4GABgYEGBgYYGBhgcGGA8fwBx/AAH4AAAAAAAAAAAB//4H//gAMAAAwAADAAAMAAAwAADAAAMAAAwAH//gf/+AAAAAAAAAAAAAAAH//gf/+AAAAAAAAAAQAADwAAPgAAOAAAYAABgAAGAAA4H//Af/8B//AAAAAAAAAAAAH//gf/+AA4AAHAAA+AAP8AB48APB4B4DwGADgQAGAAAIAAAAAAAB//4H//gAAGAAAYAABgAAGAAAYAABgAAGAAAIAAAAAAAB//4H//gfgAAfgAAPwAAPwAAH4AAHgAB+AAfgAPwAH8AB+AAH//gf/+B//4AAAAAAAAAAAH//gf/+A8AAB8AAB4AAD4AADwAAHwAAHgAAPgf/+B//4AAAAAAAAAAAAf4AH/4A//wDgHAcAOBgAYGABgYAGBwAYDADgPz8Af/gAf4AAAAAAAAAAAAf/+B//4GBgAYGABgYAGBgAYGABg4AHnAAP8AAfgAAAAAAAAAH+AB/+APz8AwAwHADgYAGBgAYGABgcAOA4B8D//4H/5gH+CAAAAAAAAAAAH//gf/+BgYAGBgAYGABgYAGD4AcP4A/z4D+HgDgGAAAAAAAADg4A/DwD+DAcYGBhwYGDBgYMGBg4YHBzgPH8AcPgAAAAYAABgAAGAAAYAABgAAH//gf/+B//4GAAAYAABgAAGAAAYAAAAAAH/4Af/4B//wAADgAAGAAAYAABgAAGAAA4AAfAf/8B//AAAAAQAAB4AAH8AAH+AAD+AAB/AAA+AAD4AB/AA/gAf4AH8AAeAABAAAAAAAfAAB/wAB/8AAP+AAD4AB/gA/wA/wAH4AAfgAAf4AAH+AAD+AAH4AH/gP/gB/gAHAAAAAAAAAAGABgcAOB8D4B4+AD/gAD8AAPwAD/wAeHgHwPgcAOBAAYAAAAQAABwAAHwAAPwAAPwAAP/gAP+AB/4AfAAHwAB8AAHAAAQAAAAAAGADgYAeBgH4GA9gYPmBh4YGfBgbwGB+AYHgBgcAGAAAIAAAA///7///v//+wAAbAABkAAAcAAB+AAB/AAA/AAAfgAAfgAAPAAAMMAAGwAAb///v//+AAAAAAAAAAAA4AAPgAH4AAeAAB+AAB+AAA4AAAgAAAAYAABgAAGAAAYAABgAAGAAAYAABgAAGAAAYAAABAAAGAAAcAAAwAAAAAAAAAAAAAAGOAA58AHu4AYxgBjGAGMYAYzgB/+AD/4AD/gAAAAAAAP//g//+D//4AcDgBgGAGAYAYBgBwOAD/wAH+AADAAAAAAD8AA/8AHh4AYBgBgGAGAYAYBgB4OADhwAGGAAAAAAAAAD8AA/8AHh4AYBgBgGAGAYAYBgAwMD//4P//gAAAAAAAAD8AA/8ADtwAYxgBjGAGMYAYxgB7OAD8wADyAAAAAEAAAYAAP/+B//4P//gxgADGAAMAAAAAAAA/AAP/MB4e4GAZgYBmBgGYGAZgMDeB//wH/+AAAAAAAD//4P//g//+AHAAAYAABgAAGAAAf/gA/+AB/4AAAAAAABn/4Gf/gZ/+AAAAAAAGZ//5n//mf/4AAAAAAAP//g//+D//4ABwAAPgAB/AAePABweAGA4AAAgAAAD//4P//g//+AAAAAAAAB/+AH/4Af/gBgAAGAAAYAABgAAH/4AP/gA/+AHAAAYAABgAAGAAAeAAA/+AB/4AAAAAAAAH/4Af/gB/+AHAAAYAABgAAGAAAf/gA/+AB/4AAAAAAAAA/AAP/AA4cAGAYAYBgBgGAGAYAcDgA/8AB/gAB4AAAAAAAAAf/+B//4H//gYBgBgGAGAYAYBgBwOAD/wAH+AADAAAAAAH8AA/8AHh4AYBgBgGAGAYAYBgAwOAH//gf/+AAAAAAAAAAAB/+AH/4Af/gBwAAGAAAYAAAAAABxgAPnAB+OAGcYAYxgBjGAHOYAefgA58AAAAAYAABgAA//wD//gBgOAGAYAQBgAAAAH/gAf/AB/+AAAYAABgAAGAAAYAf/gB/+AH/4AAAABAAAHgAAfwAAP4AAH4AAHgAD8AB/AAfgABwAAAAAAQAAB8A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"), 32, atob("BQYHDgwQDgQICAkMBAYGCQwMDAwMDAwMDAwFBQsMDAoUDg4ODg0MDxAGDA4MExAPDg8ODQ0ODhQODQ0GCQYJCgcMDAwMDAgMDAUFCwUTDA0MDQcLBwwLEQsKCwcFBw8ACw0ZEBgUGRoQGBQZGhIQDhMAAAAAEhEYExAUEBQQEA0FBQwNEAwFDgkRCgoMABEKCAwICAcMCwYFCAoKEBERCg4ODg4ODhUODQ0NDQYGBgYPEA8PDw8PDA8ODg4ODQ0NDAwMDAwMEwwMDAwMBQUFBQ0MDQ0NDQ0NDAwMDAwKDQo="), 22+(scale<<8)+(1<<16));
  return this;
};

{
let clock_info = require("clock_info");
let locale = require("locale");
let storage = require("Storage");

let SETTINGS_FILE = "circlesclock.json";
let settings = Object.assign(
  storage.readJSON("circlesclock.default.json", true) || {},
  storage.readJSON(SETTINGS_FILE, true) || {}
);

let drawTimeout;
const showWidgets = settings.showWidgets || false;
const circleCount = settings.circleCount || 3;
const showBigWeather = settings.showBigWeather || false;

let now = Math.round(new Date().getTime() / 1000);

// layout values:
let colorFg = g.theme.dark ? '#fff' : '#000';
let colorBg = g.theme.dark ? '#000' : '#fff';
let widgetOffset = showWidgets ? 24 : 0;
let dowOffset = circleCount == 3 ? 20 : 22; // dow offset relative to date
let h = g.getHeight() - widgetOffset;
let w = g.getWidth();
let hOffset = (circleCount == 3 ? 34 : 30) - widgetOffset;
let h1 = Math.round(1 * h / 5 - hOffset);
let h2 = Math.round(3 * h / 5 - hOffset);
let h3 = Math.round(8 * h / 8 - hOffset - 3); // circle middle y position

/*
 * circle x positions
 * depending on circleCount
 *
 * | 1 2 3 4 5 6 |
 * | (1) (2) (3) |
 * => circles start at 1,3,5 / 6
 *
 * | 1 2 3 4 5 6 7 8 |
 * | (1) (2) (3) (4) |
 * => circles start at 1,3,5,7 / 8
 */
let parts = circleCount * 2;
let circlePosX = [
  Math.round(1 * w / parts), // circle1
  Math.round(3 * w / parts), // circle2
  Math.round(5 * w / parts), // circle3
  Math.round(7 * w / parts), // circle4
];

let radiusOuter = circleCount == 3 ? 25 : 20;
let radiusBorder = radiusOuter+3; // absolute border of circles
let radiusInner = circleCount == 3 ? 20 : 15;
let circleFontSmall = circleCount == 3 ? "Vector:14" : "Vector:10";
let circleFont = circleCount == 3 ? "Vector:15" : "Vector:11";
let circleFontBig = circleCount == 3 ? "Vector:16" : "Vector:12";
let iconOffset = circleCount == 3 ? 6 : 8;


let draw = function() {
  let R = Bangle.appRect;
  g.reset().clearRect(R.x,R.y, R.x2, h3-(radiusBorder+1));

  g.setColor(colorBg);
  g.fillRect(0, widgetOffset, w, h2 + 22);

  // time
  g.setFontRobotoRegular50NumericOnly();
  g.setColor(colorFg);
  if (!showBigWeather) {
    g.setFontAlign(0, -1);
    g.drawString(locale.time(new Date(), 1), w / 2, h1 + 6);
  }
  else {
    g.setFontAlign(-1, -1);
    g.drawString(locale.time(new Date(), 1), 2, h1 + 6);
  }
  now = Math.round(new Date().getTime() / 1000);

  // date & dow
  g.setFontRobotoRegular21();
  if (!showBigWeather) {
    g.setFontAlign(0, 0);
    g.drawString(locale.date(new Date()), w / 2, h2);
    g.drawString(locale.dow(new Date()), w / 2, h2 + dowOffset);
  } else {
    g.setFontAlign(-1, 0);
    g.drawString(locale.date(new Date()), 2, h2);
    g.drawString(locale.dow(new Date()), 2, h2 + dowOffset, 1);
  }

  // weather
  if (showBigWeather) {
    let weather = getWeather();
    let tempString = weather ? locale.temp(weather.temp - 273.15) : undefined;
    g.setFontAlign(1, 0);
    if (tempString) g.drawString(tempString, w, h2);

    let code = weather ? weather.code : -1;
    let icon = getWeatherIconByCode(code, true);
    if (icon) g.drawImage(icon, w - 48, h1, {scale:0.75});
  }

  queueDraw();
}

let getCircleColor = function(item, data, clkmenu) {
  let colorKey = clkmenu.name;
  if(!clkmenu.dynamic) colorKey += "/"+item.name;
  colorKey += "_color";
  let color = settings[colorKey];
  //use default color only if no other color is set
  if(data.color && !color) return data.color;
  if (color && color != "") return color;
  return g.theme.fg;
}

let getGradientColor = function(color, percent) {
  if (isNaN(percent)) percent = 0;
  if (percent > 1) percent = 1;
  let colorList = [
    '#00ff00', '#80ff00', '#ffff00', '#ff8000', '#ff0000'
  ];
  if (color == "fg") {
    color = colorFg;
  }
  if (color == "green-red") {
    let colorIndex = Math.round(colorList.length * percent);
    return colorList[Math.min(colorIndex, colorList.length) - 1] || "#00ff00";
    //return g.blendColor('#00ff00', '#ff0000', percent); //mostly dithering
  }
  if (color == "red-green") {
    let colorIndex = colorList.length - Math.round(colorList.length * percent);
    return colorList[Math.min(colorIndex, colorList.length)] || "#ff0000";
    //return g.blendColor('#ff0000', '#00ff00', percent);
  }
  colorList = [
    '#0000ff', '#8800ff', '#ff00ff', '#ff0088', '#ff0000'
  ];
  if (color == "blue-red") {
    let colorIndex = Math.round(colorList.length * percent);
    return colorList[Math.min(colorIndex, colorList.length) - 1] || "#0000ff";
    //return g.blendColor('#0000ff', '#ff0000', percent);
  }
  if (color == "red-blue") {
    let colorIndex = colorList.length - Math.round(colorList.length * percent);
    return colorList[Math.min(colorIndex, colorList.length)] || "#ff0000";
    //return g.blendColor('#ff0000', '#0000ff', percent);
  }
  return color;
}

let getCircleIconColor = function(index, color, percent) {
  let colorizeIcon = settings["circle" + index + "colorizeIcon"] == true;
  if (colorizeIcon) {
    return getGradientColor(color, percent);
  } else {
    return g.theme.fg;
  }
}

let drawEmpty = function(img, w, color) {
  drawGauge(w, h3, 0, color);
  drawInnerCircleAndTriangle(w);
  writeCircleText(w, "?");
  if(img)
    g.setColor(getGradientColor(color, 0))
      .drawImage(img, w - iconOffset, h3 + radiusOuter - iconOffset, {scale: 16/24});
}

let drawCircle = function(index, item, data, clkmenu) {
  var w = circlePosX[index-1];
  drawCircleBackground(w);
  const color = getCircleColor(item, data, clkmenu);
  //drawEmpty(info? info.img : null, w, color);
  var img = data.img;
  var percent = 1; //fill up if no range
  var txt = ""+data.text;
  if (txt.endsWith(" bpm")) txt=txt.slice(0,-4); // hack for heart rate - remove the 'bpm' text
  if(item.hasRange) percent = (data.v-data.min) / (data.max-data.min);
  if(data.short) txt = data.short;
  //long text can overflow and we do not draw there anymore..
  if(txt.length>6) txt = txt.slice(0,5)+"\n"+txt.slice(5,10)
  drawGauge(w, h3, percent, color);
  drawInnerCircleAndTriangle(w);
  writeCircleText(w, txt);
  if(!img) return; //or get it from the clkinfo?
  g.setColor(getCircleIconColor(index, color, percent))
    .drawImage(img, w - iconOffset, h3 + radiusOuter - iconOffset, {scale: 16/24});
}


/*
 * Choose weather icon to display based on weather conditition code
 * https://openweathermap.org/weather-conditions#Weather-Condition-Codes-2
 */
let getWeatherIconByCode = function(code, big) {
  let codeGroup = Math.round(code / 100);
  if (big == undefined) big = false;

  // weather icons:
  let weatherCloudy = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAf/4AAAAAAAD//4AAAAAAA///wAAAAAAH+B/gAAAAAA/AA/AAAAAAH4AB+AAAAAAfAAD8AAAAAD4AAH/wAAAAfAAAP/wAAAB4AAAf/gAAAHgAAB//AAAB+AAACB+AAAfwAAAAB8AAH/AAAAAD4AA/8AAAAAHgAD8AAAAAAeAAfAAAAAAA8AB4AAAAAADwAPgAAAAAAPAA8AAAAAAA8APwAAAAAADwB/AAAAAAAPAP8AAAAAAB8B+AAAAAAAH4PgAAAAAAAHx8AAAAAAAAPngAAAAAAAAeeAAAAAAAAB7wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA94AAAAAAAAHngAAAAAAAAefAAAAAAAAD4+AAAAAAAAfB+AAAAAAAH4D/////////AH////////4AP////////AAH///////gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAAAAAAfgD/Af8H/4//7///////9//z/+AAAAAAAA");
  let weatherSunny = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAMAA8AAwAAAB4ADwAHgAAAHwAPAA+AAAAPgA8AHwAAAAfADwA+AAAAA+AfgHwAAAAB8P/w+AAAAAD7//3wAAAAAH///+AAAAAAP+B/wAAAAAAfgB+AAAAAAD4AB8AAAAAAPAADwAAAAAB8AAPgAAAAAHgAAeAAAAAAeAAB4AAAAADwAADwAAAP//AAAP//AA//8AAA//8AD//wAAD//wAP//AAAP//AAAA8AAA8AAAAAB4AAHgAAAAAHgAAeAAAAAAfAAD4AAAAAA8AAPAAAAAAD4AB8AAAAAAH4AfgAAAAAA/4H/AAAAAAH///+AAAAAA+//98AAAAAHw//D4AAAAA+AfgHwAAAAHwA8APgAAAA+ADwAfAAAAHwAPAA+AAAAeAA8AB4AAAAwADwADAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAYAQCBAIA8AH4A/wb/YP8A/gB+ARiBAIAYABgAAA");
  let weatherMoon = big ? atob("QECBAAAGAAAADwAAAA+AAAAPAAAAD8AAAA8AAAAP4AAADwAAAAfwDwD/8AAAB/gPAP/wAAAH+A8A//AAAAf8DwD/8AAAB/4AAA8AAAAHvgAADwAAAAeeAAAPAAAAB54AAA8AAAAHjwAAAAAAAA+PDgAAAAAADw8PgAAAAAAfDw/AAAAAAB4PD+AAAAAAPg8D8AAAAAB8HwH4AAAAAfg+APwAAPAH8H4Af/AA///g/gA//AD//8H4AB/+AH//AfAAH/8Af/wD4AAIH4A/gAPAAAAHwB/AB8AAAAPgD/AfgAAAAeAH//+AAAAB4AP//4AAAADwAP//AAAAAPAAH/8AAAAA8AAAAAAAAADwAAAAAAAAAPAHAAAAAAAA8A/gAAAAAAHwH4AAAAAAAfg+AAAAAAAAfHwAAAAAAAA+eAAAAAAAAB54AAAAAAAAHvAAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD3gAAAAAAAAeeAAAAAAAAB58AAAAAAAAPj4AAAAAAAB8H4AAAAAAAfgP////////8Af////////gA////////8AAf//////+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAYAP8B/4P/w//D/8f/5//j/8P/w//B/4D/ABgAAA");
  let weatherPartlyCloudy = big ? atob("QECBAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAcADwAOAAAAB4APAB4AAAAHwA8APgAAAAPgH4B8AAAAAfD/8PgAAAAA+//98AAAAAB////gQAAAAD/gf8DgAAAAH4AfgfAAAAA+AA/B+AAAADwAP8D8AAAAfAB/gH/wAAB4APwAP/wAAHgB+AAf/gAA8AHwAB//AP/wA+AACB+A//AHwAAAB8D/8AeAAAAD4P/wB4AAAAHgAPAfgAAAAeAAeH8AAAAA8AB5/wAAAADwAH3/AAAAAPAAP/AAAAAA8AA/wAAAAADwBB+AAAAAAPAOD4AAAAAB8B4HAAAAAAH4PgMAAAAAAHx8AAAAAAAAPngAAAAAAAAeeAAAAAAAAB7wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA94AAAAAAAAHngAAAAAAAAefAAAAAAAAD4+AAAAAAAAfB+AAAAAAAH4D/////////AH////////4AP////////AAH///////gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAAAYQAMAD8AIQBhoW+AOYBwwOBBgHGAGP/wf+AAA");
  let weatherRainy = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAf/4AAAAAAAD//4AAAAAAA///wAAAAAAH+B/gAAAAAA/AA/AAAAAAH4AB+AAAAAAfAAD8AAAAAD4AAH/wAAAAfAAAP/wAAAB4AAAf/gAAAHgAAB//AAAB+AAACB+AAAfwAAAAB8AAH/AAAAAD4AA/8AAAAAHgAD8AAAAAAeAAfAAAAAAA8AB4AAAAAADwAPgAAAAAAPAA8AAAAAAA8APwAAAAAADwB/AAAAAAAPAP8AAAAAAB8B+ADwAPAAH4PgAPAA8AAHx8AA8ADwAAPngADwAPAAAeeAAAAAAAAB7wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAA8PDw8AD/AADw8PDwAP8AAPDw8PAA94AA8PDw8AHngAAAAAAAAefAAAAAAAAD4+AAAAAAAAfB+AAAAAAAH4D/8PDw8PD/AH/w8PDw8P4AP/Dw8PDw/AAH8PDw8PDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8ADwAAAAAADwAPAAAAAAAPAA8AAAAAAA8ADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAYAH4AwwOBBgGEAOQAJBgjPOEkgGYAZgA8ABgAAA");
  let weatherPartlyRainy = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAf/4AAAAAAAD//4AAAAAAA///wAAAAAAH+B/gAAAAAA/AA/AAAAAAH4AB+AAAAAAfAAD8AAAAAD4AAH/wAAAAfAAAP/wAAAB4AAAf/gAAAHgAAB//AAAB+AAACB+AAAfwAAAAB8AAH/AAAAAD4AA/8AAAAAHgAD8AAAAAAeAAfAAAAAAA8AB4AAAAAADwAPgAAAAAAPAA8AAAAAAA8APwAAAAAADwB/AAAAAAAPAP8AAAAAAB8B+AAAAPAAH4PgAAAA8AAHx8AAAADwAAPngAAAAPAAAeeAAAAA8AAB7wAAAADwAAD/AAAAAPAAAP8AAAAA8AAA/wAAAPDwAAD/AAAA8PAAAP8AAADw8AAA94AAAPDwAAHngAAA8PAAAefAAADw8AAD4+AAAPDwAAfB+AAA8PAAH4D///Dw8P//AH//8PDw//4AP//w8PD//AAH//Dw8P/gAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAEEAQAAeADMAYaFvoTmAMMDgQIBxhhiGGG9wDwAGA");
  let weatherSnowy = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAf/4AAAAAAAD//4AAAAAAA///wAAAAAAH+B/gAAAAAA/AA/AAAAAAH4AB+AAAAAAfAAD8AAAAAD4AAH/wAAAAfAAAP/wAAAB4AAAf/gAAAHgAAB//AAAB+AAACB+AAAfwAAAAB8AAH/AAAAAD4AA/8AAAAAHgAD8AAAAAAeAAfAAAAAAA8AB4AAAAAADwAPgAAAAAAPAA8AAAAAAA8APwAAAAAADwB/AAAAAAAPAP8AAAAAAB8B+AAAAA8AH4PgAAAADwAHx8AAAAAPAAPngAAAAA8AAeeAAPAA//AB7wAA8AD/8AD/AADwAP/wAP8AAPAA//AA/wAP/wAPAAD/AA//AA8AAP8AD/8ADwAA94AP/wAPAAHngADwAAAAAefAAPAAAAAD4+AA8AAAAAfB+ADwAAAAH4D/8AAPAP//AH/wAA8A//4AP/AADwD//AAH8AAPAP/gAAAAAP/wAAAAAAAA//AAAAAAAAD/8AAAAAAAAP/wAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAAADwAGAEYg73C50BCAEIC50O9wRiAGAA8AAAAAA");
  let weatherFoggy = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAMAA8AAwAAAB4ADwAHgAAAHwAPAA+AAAAPgA8AHwAAAAfADwA+AAAAA+AfgHwAAAAB8P/w+AAAAAD7//3wAAAAAH///+AAAAAAP+B/wAAAAAAfgB+AAAAAAD4AB8AAAAAAPAADwAAAAAB8AAPgAAAAAHgAAeAAAAAAeAAB4AAAAADwAADwAAAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AA///wAA8AAAD///AAHgAAAP//8AAeAAAA///wAD4AAAAAAAAAPAAAAAAAAAB8AAAAAAAAAfgAAAAAAAAH/AAAAA///w/+AAAAD///D98AAAAP//8PD4AAAA///wgHwAAAAAAAAAPgAAAAAAAAAfAAAAAAAAAA+AAAAAAAAAB4AAD///DwADAAAP//8PAAAAAA///w8AAAAAD///DwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAAADwAZgDDA4EGAcQAZAAgAAf74AAAAAd/4AAAAA");
  let weatherStormy = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAf/4AAAAAAAD//4AAAAAAA///wAAAAAAH+B/gAAAAAA/AA/AAAAAAH4AB+AAAAAAfAAD8AAAAAD4AAH/wAAAAfAAAP/wAAAB4AAAf/gAAAHgAAB//AAAB+AAACB+AAAfwAAAAB8AAH/AAAAAD4AA/8AAAAAHgAD8AAAAAAeAAfAAAAAAA8AB4AAAAAADwAPgAAAAAAPAA8AAAAAAA8APwAAAAAADwB/AAAAAAAPAP8AAAAAAB8B+AAAAAAAH4PgAAAAAAAHx8AAAAAAAAPngAAAAAAAAeeAAAAA/wAB7wAAAAH+AAD/AAAAAf4AAP8AAAAD/AAA/wAAAAP4AAD/AAAAB/gAAP8AAAAH8AAA94AAAA/wAAHngAAAD+AAAefAAAAfwAAD4+AAAB/AAAfB+AAAP4AAH4D///g//w//AH//+H/+D/4AP//wf/wf/AAH//D//D/gAAAAAAD4AAAAAAAAAfAAAAAAAAAB8AAAAAAAAAPgAAAAAAAAA8AAAAAAAAAHwAAAAAAAAAeAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : atob("EBCBAAAAAYAH4AwwOBBgGEAOQMJAgjmOGcgAgACAAAAAAAAA");
  let unknown = big ? atob("QECBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAAAH/+AAAAAAAB//+AAAAAAAP//8AAAAAAB/gf4AAAAAAPwAPwAAAAAB+AAfgAAAAAPwAA+AAAAAA+B+B8AAAAAHwf+D4AAAAAfD/8HgAAAAB4P/4eAAAAAPh8Ph8AAAAA+HgfDwAAAAD/8A8PAAAAAP/wDw8AAAAA//APDwAAAAB/4A8PAAAAAAAAHw8AAAAAAAB+HwAAAAAAAfweAAAAAAAH+B4AAAAAAA/wPgAAAAAAH8B8AAAAAAA/APgAAAAAAD4B+AAAAAAAfAfwAAAAAAB4H+AAAAAAAPh/gAAAAAAA8H8AAAAAAADw/AAAAAAAAPDwAAAAAAAA//AAAAAAAAD/8AAAAAAAAP/wAAAAAAAAf+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/gAAAAAAAA//AAAAAAAAD/8AAAAAAAAP/wAAAAAAAA8PAAAAAAAADw8AAAAAAAAPDwAAAAAAAA8PAAAAAAAAD/8AAAAAAAAP/wAAAAAAAA//AAAAAAAAB/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") : undefined;

  switch (codeGroup) {
    case 2:
      return weatherStormy;
    case 3:
      return weatherCloudy;
    case 5:
      switch (code) {
        case 511:
          return weatherSnowy;
        case 520:
          return weatherPartlyRainy;
        case 521:
          return weatherPartlyRainy;
        case 522:
          return weatherPartlyRainy;
        case 531:
          return weatherPartlyRainy;
        default:
          return weatherRainy;
      }
      case 6:
        return weatherSnowy;
      case 7:
        return weatherFoggy;
      case 8:
        switch (code) {
          case 800:
            var hr = (new Date()).getHours();
            var isDay = (hr>6) && (hr<=18); // fixme we don't want to include ALL of suncalc just to choose one icon
            return isDay ? weatherSunny : weatherMoon;
          case 801:
            return weatherPartlyCloudy;
          case 802:
            return weatherPartlyCloudy;
          default:
            return weatherCloudy;
        }
      default:
        return unknown;
  }
}

/*
 * Draws the background and the grey circle
 */
let drawCircleBackground = function(w) {
  // Draw rectangle background:
  g.setColor(colorBg);
  g.fillRect(w - radiusBorder, h3 - radiusBorder, w + radiusBorder, g.getHeight()-1);
  // Draw grey background circle:
  g.setColor('#808080'); // grey
  g.fillCircle(w, h3, radiusOuter);
}

let drawInnerCircleAndTriangle = function(w) {
  // Draw inner circle
  g.setColor(colorBg);
  g.fillCircle(w, h3, radiusInner);
  // Draw triangle which covers the bottom of the circle
  g.fillPoly([w, h3, w - 15, h3 + radiusOuter + 5, w + 15, h3 + radiusOuter + 5]);
}

/*
 * This draws the actual gauge consisting out of lots of little filled circles
 */
let drawGauge = function(cx, cy, percent, color) {
  let offset = 15;
  let end = 360 - offset;
  let radius = radiusOuter+1;

  if (percent <= 0) return; // no gauge needed
  if (percent > 1) percent = 1;

  let startRotation = -offset;
  let endRotation = startRotation - ((end - offset) * percent);

  color = getGradientColor(color, percent);
  g.setColor(color);
  // convert to radians
  startRotation *= Math.PI / 180;
  let amt = Math.PI / 10;
  endRotation = (endRotation * Math.PI / 180) - amt;
  // all we need to draw is an arc, because we'll fill the center
  let poly = [cx,cy];
  for (let r = startRotation; r > endRotation; r -= amt)
    poly.push(
      cx + radius * Math.sin(r),
      cy + radius * Math.cos(r)
    );
  g.fillPoly(poly);
}

let writeCircleText = function(w, content) {
  if (content == undefined) return;
  let font = String(content).length > 4 ? circleFontSmall : String(content).length > 3 ? circleFont : circleFontBig;
  g.setFont(font);

  g.setFontAlign(0, 0);
  g.setColor(colorFg);
  g.drawString(content, w, h3);
}

let getWeather=function() {
  let jsonWeather = storage.readJSON('weather.json');
  return jsonWeather && jsonWeather.weather ? jsonWeather.weather : undefined;
}

g.clear(1); // clear the whole screen

Bangle.setUI({
  mode : "clock",
  remove : function() {
    // Called to unload all of the clock app (allowing for 'fast load')
    if (drawTimeout) clearTimeout(drawTimeout);
    drawTimeout = undefined;
    clockInfoMenu.forEach(c => c.remove());
    delete Graphics.prototype.setFontRobotoRegular50NumericOnly;
    delete Graphics.prototype.setFontRobotoRegular21;
    if (!showWidgets) require("widget_utils").show();
  }
});

let clockInfoDraw = (itm, info, options) => {
  //print("Draw",itm.name,options);
  let clkmenu = clockInfoItems[options.menuA];
  drawCircle(options.circlePosition, itm, info, clkmenu);
  if (options.focus) g.reset().drawRect(options.x, options.y, options.x+options.w-2, options.y+options.h-1)
};
let clockInfoItems = require("clock_info").load();
let clockInfoMenu = [];
for(var i=0;i<circleCount; i++) {
  let w = circlePosX[i];
  let y = h3-radiusBorder;
  clockInfoMenu[i] = require("clock_info").addInteractive(clockInfoItems, {
    app:"circlesclock",
    x:w-radiusBorder, y:y, w:radiusBorder*2, h:g.getHeight()-(y+1),
    draw : clockInfoDraw, circlePosition : i+1
  });
}

Bangle.loadWidgets();
if (!showWidgets) require("widget_utils").hide();
else Bangle.drawWidgets();

// schedule a draw for the next second or minute
let queueDraw=function() {
  let queueMillis = settings.updateInterval * 1000;
  if (drawTimeout) clearTimeout(drawTimeout);
  drawTimeout = setTimeout(function() {
    drawTimeout = undefined;
    draw();
  }, queueMillis - (Date.now() % queueMillis));
}

draw();
}
